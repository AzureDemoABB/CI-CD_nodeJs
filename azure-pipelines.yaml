trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  ACR_NAME: 'acrdemoabb'
  IMAGE_NAME: 'sampleapp'
  AKS_RESOURCE_GROUP: 'Terraform-ABB-DEMO'
  AKS_CLUSTER_NAME: 'ABB_Demo_Cluster'
  NAMESPACE: 'default'
  -group: ACR-Secrets  # This will fetch ACR_USERNAME and ACR_PASSWORD

parameters:
  - name: environment
    displayName: 'Select Deployment Environment'
    type: string
    default: 'dev'
    values:
      - dev
      - test
      - preprod
      - prod


stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - script: |
        docker build -t $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(TAG) .
        echo "$(ACR_PASSWORD)" | docker login $(ACR_NAME).azurecr.io -u $(ACR_USERNAME) --password-stdin
        docker push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(TAG)
      displayName: 'Build and Push Docker Image'

- stage: Deploy_to_AKS
  displayName: 'Deploy to AKS'
  jobs:
  - job: Deploy
    steps:
    - task: Kubernetes@1
      displayName: 'Login to AKS & Deploy'
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'Azure-Terraform-Connection' #this is service-connection created to communicate with the azure resources 
        azureResourceGroup: '$(AKS_RESOURCE_GROUP)'
        kubernetesCluster: '$(AKS_CLUSTER_NAME)'
        useClusterAdmin: true

    - script: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml -n ${{parameters.environment}}
      displayName: 'Apply Kubernetes Deployment'
